apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: opentelemetry-collector
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
  labels:
    release: opentelemetry-collector
spec:
  destination:
    namespace: observability
    server: https://kubernetes.default.svc
  source:
    repoURL: https://open-telemetry.github.io/opentelemetry-helm-charts
    targetRevision: 0.60.0
    chart: opentelemetry-collector
    helm:
      values: |
        mode: deployment
        
        service:
          type: ClusterIP
        
        resources:
          limits:
            memory: 512Mi
            cpu: 500m
          requests:
            memory: 256Mi
            cpu: 250m
        
        config:
          receivers:
            otlp:
              protocols:
                grpc:
                  endpoint: 0.0.0.0:4317
                http:
                  endpoint: 0.0.0.0:4318
            prometheus:
              config:
                scrape_configs:
                  - job_name: 'kubernetes-pods'
                    kubernetes_sd_configs:
                      - role: pod
                    relabel_configs:
                      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                        action: keep
                        regex: true
                      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                        action: replace
                        target_label: __metrics_path__
                        regex: (.+)
                      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                        action: replace
                        regex: ([^:]+)(?::\d+)?;(\d+)
                        replacement: $1:$2
                        target_label: __address__
                      - action: labelmap
                        regex: __meta_kubernetes_pod_label_(.+)
                      - source_labels: [__meta_kubernetes_namespace]
                        action: replace
                        target_label: kubernetes_namespace
                      - source_labels: [__meta_kubernetes_pod_name]
                        action: replace
                        target_label: kubernetes_pod_name
                  - job_name: 'kubernetes-service-endpoints'
                    kubernetes_sd_configs:
                      - role: endpoints
                    relabel_configs:
                      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
                        action: keep
                        regex: true
                      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
                        action: replace
                        target_label: __scheme__
                        regex: (https?)
                      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
                        action: replace
                        target_label: __metrics_path__
                        regex: (.+)
                      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
                        action: replace
                        regex: ([^:]+)(?::\d+)?;(\d+)
                        replacement: $1:$2
                        target_label: __address__
                      - action: labelmap
                        regex: __meta_kubernetes_service_label_(.+)
                      - source_labels: [__meta_kubernetes_namespace]
                        action: replace
                        target_label: kubernetes_namespace
                      - source_labels: [__meta_kubernetes_service_name]
                        action: replace
                        target_label: kubernetes_name
                  - job_name: 'kubernetes-nodes'
                    kubernetes_sd_configs:
                      - role: node
                    relabel_configs:
                      - action: labelmap
                        regex: __meta_kubernetes_node_label_(.+)
                      - source_labels: [__meta_kubernetes_node_name]
                        action: replace
                        target_label: kubernetes_node_name
                    metrics_path: /metrics
                    scheme: https
                    tls_config:
                      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                      insecure_skip_verify: true
                    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          
          processors:
            batch:
              timeout: 1s
              send_batch_size: 1024
            memory_limiter:
              check_interval: 1s
              limit_mib: 1500
            resource:
              attributes:
                - key: k8s.cluster.name
                  value: "observability-cluster"
                  action: upsert
          
          exporters:
            prometheus:
              endpoint: "0.0.0.0:9464"
              namespace: "observability"
              const_labels:
                label1: value1
              send_timestamps: true
              metric_expiration: 180m
              enable_open_metrics: true
            logging:
              verbosity: detailed
          
          service:
            pipelines:
              traces:
                receivers: [otlp]
                processors: [batch, memory_limiter, resource]
                exporters: [logging]
              metrics:
                receivers: [otlp, prometheus]
                processors: [batch, memory_limiter, resource]
                exporters: [prometheus, logging]
              logs:
                receivers: [otlp]
                processors: [batch, memory_limiter, resource]
                exporters: [logging]
  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true 