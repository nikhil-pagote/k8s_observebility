apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: observability-ingress
  namespace: observability
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: "web"
    traefik.ingress.kubernetes.io/router.tls: "false"
  labels:
    app.kubernetes.io/part-of: observability-stack
    app.kubernetes.io/managed-by: argocd
spec:
  ingressClassName: traefik
  rules:
  - host: localhost
    http:
      paths:
      - path: /grafana
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 80
        # Apply grafana-stripprefix middleware
        # This will be handled by annotation
      - path: /prometheus
        pathType: Prefix
        backend:
          service:
            name: prometheus-server
            port:
              number: 80
        # Apply prometheus-stripprefix middleware
        # This will be handled by annotation
      - path: /jaeger
        pathType: Prefix
        backend:
          service:
            name: jaeger-query
            port:
              number: 80
        # Apply jaeger-stripprefix middleware
        # This will be handled by annotation
      - path: /clickhouse
        pathType: Prefix
        backend:
          service:
            name: clickhouse
            port:
              number: 8123
        # Apply clickhouse-stripprefix middleware
        # This will be handled by annotation
---
# Separate ingress for ArgoCD since it's in a different namespace
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-ingress
  namespace: argocd
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: "web"
    traefik.ingress.kubernetes.io/router.tls: "false"
    traefik.ingress.kubernetes.io/middlewares: argocd-stripprefix@kubernetescrd
  labels:
    app.kubernetes.io/part-of: observability-stack
    app.kubernetes.io/managed-by: argocd
spec:
  ingressClassName: traefik
  rules:
  - host: localhost
    http:
      paths:
      - path: /argocd
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              number: 80
---
# Separate ingress for Grafana with specific middleware
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: observability
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: "web"
    traefik.ingress.kubernetes.io/router.tls: "false"
    traefik.ingress.kubernetes.io/middlewares: grafana-stripprefix@kubernetescrd
  labels:
    app.kubernetes.io/part-of: observability-stack
    app.kubernetes.io/managed-by: argocd
spec:
  ingressClassName: traefik
  rules:
  - host: localhost
    http:
      paths:
      - path: /grafana
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 80
---
# Separate ingress for Prometheus with specific middleware
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prometheus-ingress
  namespace: observability
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: "web"
    traefik.ingress.kubernetes.io/router.tls: "false"
    traefik.ingress.kubernetes.io/middlewares: prometheus-stripprefix@kubernetescrd
  labels:
    app.kubernetes.io/part-of: observability-stack
    app.kubernetes.io/managed-by: argocd
spec:
  ingressClassName: traefik
  rules:
  - host: localhost
    http:
      paths:
      - path: /prometheus
        pathType: Prefix
        backend:
          service:
            name: prometheus-server
            port:
              number: 80
---
# Separate ingress for Jaeger with specific middleware
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger-ingress
  namespace: observability
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: "web"
    traefik.ingress.kubernetes.io/router.tls: "false"
    traefik.ingress.kubernetes.io/middlewares: jaeger-stripprefix@kubernetescrd
  labels:
    app.kubernetes.io/part-of: observability-stack
    app.kubernetes.io/managed-by: argocd
spec:
  ingressClassName: traefik
  rules:
  - host: localhost
    http:
      paths:
      - path: /jaeger
        pathType: Prefix
        backend:
          service:
            name: jaeger-query
            port:
              number: 80
---
# Separate ingress for ClickHouse with specific middleware
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: clickhouse-ingress
  namespace: observability
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: "web"
    traefik.ingress.kubernetes.io/router.tls: "false"
    traefik.ingress.kubernetes.io/middlewares: clickhouse-stripprefix@kubernetescrd
  labels:
    app.kubernetes.io/part-of: observability-stack
    app.kubernetes.io/managed-by: argocd
spec:
  ingressClassName: traefik
  rules:
  - host: localhost
    http:
      paths:
      - path: /clickhouse
        pathType: Prefix
        backend:
          service:
            name: clickhouse
            port:
              number: 8123
---
# Middleware for Grafana
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: grafana-stripprefix
  namespace: observability
spec:
  stripPrefix:
    prefixes:
      - /grafana
---
# Middleware for Prometheus
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: prometheus-stripprefix
  namespace: observability
spec:
  stripPrefix:
    prefixes:
      - /prometheus
---
# Middleware for Jaeger
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: jaeger-stripprefix
  namespace: observability
spec:
  stripPrefix:
    prefixes:
      - /jaeger
---
# Middleware for ClickHouse
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: clickhouse-stripprefix
  namespace: observability
spec:
  stripPrefix:
    prefixes:
      - /clickhouse
---
# Middleware for ArgoCD
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: argocd-stripprefix
  namespace: argocd
spec:
  stripPrefix:
    prefixes:
      - /argocd
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: observability-hosts
  namespace: observability
  labels:
    app.kubernetes.io/part-of: observability-stack
    app.kubernetes.io/managed-by: argocd
data:
  hosts.txt: |
    127.0.0.1 localhost 